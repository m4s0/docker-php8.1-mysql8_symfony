services:
#  db:
#    image: postgres:17.4
##    restart: always
#    environment:
#      - POSTGRES_HOST=${DB_HOST}
#      - POSTGRES_PORT=${DB_PORT}
#      - POSTGRES_PASSWORD=${DB_PASSWORD}
#      - POSTGRES_USER=${DB_USERNAME}
#      - POSTGRES_DB=${DB_DATABASE}
#      - POSTGRES_HOST_AUTH_METHOD=trust
#    ports:
#      - ${PGSQL_EXPOSED_PORT}:5432
#    volumes:
#      - db-data:/var/lib/postgresql/data
##    healthcheck:
##      test: [ "CMD-SHELL", "runuser", "-u", "postgres", "--", "pg_isready" ]
##      interval: 1s
##      timeout: 5s
##      retries: 10

  db:
    image: postgres:16.0
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - ${DB_PORT}:5432
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./docker/pgsql/scripts:/docker-entrypoint-initdb.d

  php-fpm:
    container_name: php-fpm
    build:
      context: ./php-fpm
    depends_on:
      - db
    environment:
      - XDEBUG_CONFIG=${XDEBUG_CONFIG}
      - PHP_IDE_CONFIG=${PHP_IDE_CONFIG}
      - APP_ENV=${APP_ENV}
      - APP_SECRET=${APP_SECRET}
      - DB_URL=mysql://${DB_USERNAME}:${DB_PASSWORD}@db:3306/${DB_DATABASE}
    volumes:
      - ../app:/var/app

  nginx:
    container_name: nginx
    build:
      context: ./nginx
    volumes:
      - ../app:/var/app
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/sites/:/etc/nginx/sites-available
      - ./nginx/conf.d/:/etc/nginx/conf.d
    depends_on:
      - php-fpm
    ports:
      - "80:80"
      - "443:443"

volumes:
  db-data:
    name: ${DB_VOLUME_NAME}
